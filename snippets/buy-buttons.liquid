{% comment %}
  Renders product buy-buttons.
  Accepts:
  - product: {Object} product object.
  - block: {Object} passing the block information.
  - product_form_id: {String} product form id.
  - section_id: {String} id of section to which this snippet belongs.
  - show_pickup_availability:: {Boolean} for the pickup availability. If true the pickup availability is rendered, false - not rendered (optional).

  Usage:
  {% render 'buy-buttons', block: block, product: product, product_form_id: product_form_id, show_pickup_availability: true %}
{% endcomment %}
<div {{ block.shopify_attributes }}>
  {%- if product != blank -%}
    <product-form class="product-form">
      <div class="product-form__error-message-wrapper" role="alert" hidden>
        {# SVG icons and error messages #}
      </div>

      {%- form 'product', product, id: product_form_id, class: 'form', novalidate: 'novalidate', data-type: 'add-to-cart-form' -%}
        <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}" disabled class="product-variant-id">
        <div class="product-form__buttons">
          {%- liquid
            assign check_against_inventory = true
            if product.selected_or_first_available_variant.inventory_management != 'shopify' or product.selected_or_first_available_variant.inventory_policy == 'continue'
              assign check_against_inventory = false
            endif
            if product.selected_or_first_available_variant.quantity_rule.min > product.selected_or_first_available_variant.inventory_quantity and check_against_inventory
              assign quantity_rule_soldout = true
            endif
          -%}
          <button id="ProductSubmitButton-{{ section_id }}" type="submit" name="add" class="product-form__submit button button--full-width {% if block.settings.show_dynamic_checkout %}button--secondary{% else %}button--primary{% endif %}" {% if product.selected_or_first_available_variant.available == false or quantity_rule_soldout %} disabled {% endif %}>
            <span>
              {%- if product.selected_or_first_available_variant.available == false or quantity_rule_soldout -%}
                {{ 'products.product.sold_out' | t }}
              {%- else -%}
                {{ 'products.product.add_to_cart' | t }}
              {%- endif -%}
            </span>
            <div class="loading-overlay__spinner hidden">
              {# Spinner SVG #}
            </div>
          </button>
          {%- if block.settings.show_dynamic_checkout -%}
            {{ form | payment_button }}
          {%- endif -%}
        </div>
      {%- endform -%}
    </product-form>
  {%- else -%}
    {# Sold out button rendering #}
  {%- endif -%}

  {%- if show_pickup_availability -%}
    {# Pickup availability related rendering #}
  {%- endif -%}
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const originalButton = document.getElementById('ProductSubmitButton-{{ section_id }}');
    const stickyContainer = document.createElement('div');
    stickyContainer.innerHTML = '<button class="button button--full-width button--secondary" style="position:fixed;bottom:20px;width:90%;left:5%;z-index:1000;">Add to Cart</button>';
    document.body.appendChild(stickyContainer);
    stickyContainer.style.display = 'none';  {# Initially hide the sticky button #}

    function handleScroll() {
      const rect = originalButton.getBoundingClientRect();
      if (rect.top < 0) {
        stickyContainer.style.display = 'block';  {# Show sticky button if original is out of view #}
      } else {
        stickyContainer.style.display = 'none';  {# Hide sticky button if original is in view #}
      }
    }

    window.addEventListener('scroll', handleScroll);
    handleScroll();
  });
</script>
